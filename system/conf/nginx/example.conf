server {
    listen 80;
    listen [::]:80;
    server_name example.local www.example.local;
    return 301 https://example.local$request_uri;
}

# --------------------------------------------------
# How to Generate SSL Key
# --------------------------------------------------

# --------------------------------------------------
# For Windows system
# --------------------------------------------------
# Run this command for install choco
# Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
# Run this command for install mkcert
# choco install mkcert
# Run this command for install mkcert CA ROOT
# mkcert -install
# Run this command for generate cert and key
# mkcert -key-file mkcert-ssl.key -cert-file mkcert-ssl.crt example.local *.example.local
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name example.local www.example.local;

    ssl_certificate certs/mkcert-ssl.crt;
    ssl_certificate_key certs/mkcert-ssl.key;

    root /var/www/html;
    index index.html index.htm index.php;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    fastcgi_param GATEWAY_INTERFACE CGI/1.1;
    fastcgi_param SERVER_SOFTWARE nginx;
    fastcgi_param QUERY_STRING $query_string;
    fastcgi_param REQUEST_METHOD $request_method;
    fastcgi_param CONTENT_TYPE $content_type;
    fastcgi_param CONTENT_LENGTH $content_length;
    fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    fastcgi_param REQUEST_URI $request_uri;
    fastcgi_param DOCUMENT_URI $document_uri;
    fastcgi_param DOCUMENT_ROOT /var/www/html;
    fastcgi_param SERVER_PROTOCOL $server_protocol;
    fastcgi_param REMOTE_ADDR $remote_addr;
    fastcgi_param REMOTE_PORT $remote_port;
    fastcgi_param SERVER_ADDR $server_addr;
    fastcgi_param SERVER_PORT $server_port;
    fastcgi_param SERVER_NAME $server_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param HTTPS $https;

    location ~ \.php(/|$) {
        try_files $uri $fastcgi_script_name =404;
        fastcgi_pass php:9000;
    }

    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_read_timeout 60;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    #
    # Static file rules
    #
    location ~* \.(?:css|js)$ {
        access_log off;
        log_not_found off;
        add_header Cache-Control "no-cache, public, must-revalidate, proxy-revalidate";
    }

    location ~* \.(?:jpg|jpeg|gif|png|ico|xml)$ {
        access_log off;
        log_not_found off;
        expires 365d;
        add_header Cache-Control "public";
    }

    location ~* \.(?:eot|woff|woff2|ttf|svg|otf) {
        access_log off;
        log_not_found off;
        expires 365d;
        add_header Cache-Control "public";

        # allow CORS requests
        add_header Access-Control-Allow-Origin *;
    }
}